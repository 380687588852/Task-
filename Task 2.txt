# prediction using unsupervised ML

# importing libraries
import pandas as pd 
import numpy as np
import seaborn as sns 
import matplotlib.pyplot as plt
import warnings
warnings.filterwarnings('ignore')

importing dataset
Iris=pd.read_csv('C:\\Users\\admin\\Downloads\\Iris.csv')
Iris
Iris.info()
Iris.describe()

# dividing this into indpendent  & dependent features
x=Iris.iloc[:,[1,4]].values

using elbow method to find the optimal number of cluster
from sklearn.cluster import KMeans
wcss=[]
for i in range (1,11):
    kmeans=KMeans(n_clusters = i,init = 'k-means++', random_state=42)
    kmeans.fit(x)
    wcss.append(kmeans.inertia_)
plt.plot(range(1,11),wcss)
plt.title('the elbow method')
plt.xlabel('number of cluster ')
plt.ylabel('wcss')
plt.show()

traning the kmeans model on the dataset
kmeans= KMeans(n_clusters= 3,init='k-means++',random_state=0)
y_kmeans=kmeans.fit_predict(x)
print(y_kmeans)

plt.scatter(x[y_kmeans ==0,0],x[y_kmeans==0,1],s=100 ,c='red', label='Iris-setosa')
plt.scatter(x[y_kmeans ==1,0],x[y_kmeans==1,1],s=100 ,c='blue', label='Iris-versicolour')
plt.scatter(x[y_kmeans ==2,0],x[y_kmeans==2,1],s=100 ,c='green', label='Iris-virginica')
plt.scatter(kmeans.cluster_centers_[:,0],kmeans.cluster_centers_[:,1],s=300,c='pink',label='centroids')
plt.title('cluster of Iris data')
plt.xlabel('sepal length',fontsize=18)
plt.ylabel('sepal width',fontsize=18)
plt.legend()
plt.show